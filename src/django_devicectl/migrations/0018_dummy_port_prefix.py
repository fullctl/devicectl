# Generated by Django 3.2.15 on 2023-03-28 15:04

from django.db import migrations


def forwards(apps, schema_editor):
    """
    Rename all devicectl models that implement a `name` field
    where the value begins with `pdb:` to `peerctl:`
    """

    Facility = apps.get_model("django_devicectl", "Facility")
    VirtualPort = apps.get_model("django_devicectl", "VirtualPort")
    LogicalPort = apps.get_model("django_devicectl", "LogicalPort")

    for facility in Facility.handleref.all():
        if facility.slug == "pdb":
            facility.slug = "peerctl"
            facility.name = "peerctl"
            facility.save()

        for device in facility.devices.all():
            logical_port_ids = [p.logical_port_id for p in device.physical_ports.all()]
            logical_ports = LogicalPort.handleref.filter(id__in=logical_port_ids)
            virtual_ports = VirtualPort.handleref.filter(logical_port__in=logical_ports)

            is_ixctl_device = virtual_ports.filter(name__icontains=":ixctl:").exists()

            if is_ixctl_device:
                name_prefix = "peerctl:ixctl:"
            else:
                name_prefix = "peerctl:pdbctl:"

            if device.name.startswith("pdb:"):
                device.name = name_prefix + device.name[4:]
                device.save()

            for virtual_port in virtual_ports:
                if virtual_port.name.startswith("pdb:"):
                    virtual_port.name = name_prefix + virtual_port.name[4:]
                    virtual_port.save()

            for logical_port in logical_ports:
                if logical_port.name.startswith("pdb:"):
                    logical_port.name = name_prefix + logical_port.name[4:]
                    logical_port.save()

            for physical_port in device.physical_ports.all():
                if physical_port.name.startswith("pdb:"):
                    physical_port.name = name_prefix + physical_port.name[4:]
                    physical_port.save()


class Migration(migrations.Migration):
    dependencies = [
        ("django_devicectl", "0017_auto_20220928_1051"),
    ]

    operations = [
        migrations.RunPython(forwards, migrations.RunPython.noop),
    ]
