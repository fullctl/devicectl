# Generated by Django 3.2.15 on 2023-05-11 10:11

import django.db.models.deletion
import django.db.models.manager
import django_handleref.models
import fullctl.django.fields.service_bridge
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("django_devicectl", "0022_create_missing_ports"),
    ]

    operations = [
        migrations.AddField(
            model_name="deviceoperationalstatus",
            name="diff",
            field=models.TextField(
                blank=True, help_text="Configuration diff", null=True
            ),
        ),
        migrations.AddField(
            model_name="deviceoperationalstatus",
            name="url_current",
            field=models.URLField(
                blank=True, help_text="Current config url", null=True
            ),
        ),
        migrations.AddField(
            model_name="deviceoperationalstatus",
            name="url_reference",
            field=models.URLField(
                blank=True, help_text="Reference config url", null=True
            ),
        ),
        migrations.CreateModel(
            name="DeviceConfigHistory",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "created",
                    django_handleref.models.CreatedDateTimeField(
                        auto_now_add=True, verbose_name="Created"
                    ),
                ),
                (
                    "updated",
                    django_handleref.models.UpdatedDateTimeField(
                        auto_now=True, verbose_name="Updated"
                    ),
                ),
                ("version", models.IntegerField(default=0)),
                (
                    "status",
                    models.CharField(
                        choices=[("ok", "ok"), ("error", "Error")],
                        default="ok",
                        help_text="Configuration status",
                        max_length=255,
                    ),
                ),
                (
                    "error_message",
                    models.TextField(
                        blank=True,
                        help_text="Configuration error",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "event",
                    fullctl.django.fields.service_bridge.ReferencedObjectCharField(
                        blank=True,
                        bridge_type="event",
                        help_text="auditCtl event reference",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "diff",
                    models.TextField(
                        blank=True, help_text="Configuration diff", null=True
                    ),
                ),
                (
                    "url_current",
                    models.URLField(
                        blank=True, help_text="Current config url", null=True
                    ),
                ),
                (
                    "url_reference",
                    models.URLField(
                        blank=True, help_text="Reference config url", null=True
                    ),
                ),
                (
                    "device",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="config_history",
                        to="django_devicectl.device",
                    ),
                ),
            ],
            options={
                "verbose_name": "Device Config History",
                "verbose_name_plural": "Device Config Histories",
                "db_table": "devicectl_device_config_history",
            },
            managers=[
                ("handleref", django.db.models.manager.Manager()),
            ],
        ),
    ]
