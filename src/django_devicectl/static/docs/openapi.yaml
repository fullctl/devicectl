openapi: 3.0.2
info:
  title: ''
  version: ''
paths:
  /api/account/org/:
    get:
      operationId: Organization list
      description: 'List the organizations that the requesting user belongs

        to or has permissions to'
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization'
          description: ''
      tags:
      - api
  /api/account/user/asns/:
    get:
      operationId: User asns
      description: Lists the asns that the requesting user has been verified for.
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ASN'
          description: ''
      tags:
      - api
  /api/usage/{org_tag}/:
    get:
      operationId: Usage list
      description: List organization's usage for metered apis
      parameters:
      - name: org_tag
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Usage'
          description: ''
      tags:
      - api
  /api/service-bridge/system/status/:
    get:
      operationId: 'Service Bridge: Status list'
      description: 'Returns service bridge status for all the service bridges

        in use'
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Status'
          description: ''
      tags:
      - api
  /api/service-bridge/system/heartbeat/:
    get:
      operationId: 'Service Bridge: Heartbeat list'
      description: Service heart-beat, check if the service is alive and responding
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Heartbeat'
          description: ''
      tags:
      - api
  /api/service-bridge/data/device/:
    get:
      operationId: 'Service Bridge: Device list'
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Device'
          description: ''
      tags:
      - api
    post:
      operationId: 'Service Bridge: Device create'
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Device'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Device'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Device'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
          description: ''
      tags:
      - api
  /api/service-bridge/data/device/{id}/:
    get:
      operationId: 'Service Bridge: Device retrieve'
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this Device.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
          description: ''
      tags:
      - api
    put:
      operationId: 'Service Bridge: Device update'
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this Device.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Device'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Device'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Device'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
          description: ''
      tags:
      - api
    patch:
      operationId: 'Service Bridge: Device partial_update'
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this Device.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Device'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Device'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Device'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
          description: ''
      tags:
      - api
    delete:
      operationId: 'Service Bridge: Device destroy'
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this Device.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/facility/{org_tag}/:
    get:
      operationId: Facility list
      description: ''
      parameters:
      - name: org_tag
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Facility'
          description: ''
      tags:
      - api
    post:
      operationId: Facility create
      description: ''
      parameters:
      - name: org_tag
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Facility'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Facility'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Facility'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Facility'
          description: ''
      tags:
      - api
  /api/facility/{org_tag}/{facility_tag}/:
    get:
      operationId: Facility retrieve
      description: ''
      parameters:
      - name: org_tag
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: facility_tag
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Facility'
          description: ''
      tags:
      - api
    put:
      operationId: Facility update
      description: ''
      parameters:
      - name: org_tag
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: facility_tag
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Facility'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Facility'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Facility'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Facility'
          description: ''
      tags:
      - api
    delete:
      operationId: Facility destroy
      description: ''
      parameters:
      - name: org_tag
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: facility_tag
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/facility/{org_tag}/{facility_tag}/devices/:
    get:
      operationId: Facility devices
      description: ''
      parameters:
      - name: org_tag
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: facility_tag
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Facility'
          description: ''
      tags:
      - api
  /api/device/{org_tag}/:
    get:
      operationId: Device list
      description: ''
      parameters:
      - name: org_tag
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Device'
          description: ''
      tags:
      - api
    post:
      operationId: Device create
      description: ''
      parameters:
      - name: org_tag
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Device'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Device'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Device'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
          description: ''
      tags:
      - api
  /api/device/{org_tag}/list_unassigned/:
    get:
      operationId: Device list_unassigned
      description: ''
      parameters:
      - name: org_tag
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
          description: ''
      tags:
      - api
  /api/device/{org_tag}/{device_id}/:
    get:
      operationId: Device retrieve
      description: ''
      parameters:
      - name: org_tag
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: device_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
          description: ''
      tags:
      - api
    put:
      operationId: Device update
      description: ''
      parameters:
      - name: org_tag
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: device_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Device'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Device'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Device'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
          description: ''
      tags:
      - api
    delete:
      operationId: Device destroy
      description: ''
      parameters:
      - name: org_tag
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: device_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/physical_port/{org_tag}/:
    get:
      operationId: PhysicalPort list
      description: ''
      parameters:
      - name: org_tag
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PhysicalPort'
          description: ''
      tags:
      - api
    post:
      operationId: PhysicalPort create
      description: ''
      parameters:
      - name: org_tag
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PhysicalPort'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PhysicalPort'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PhysicalPort'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PhysicalPort'
          description: ''
      tags:
      - api
  /api/physical_port/{org_tag}/{physical_port_id}/:
    get:
      operationId: PhysicalPort retrieve
      description: ''
      parameters:
      - name: org_tag
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: physical_port_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PhysicalPort'
          description: ''
      tags:
      - api
    put:
      operationId: PhysicalPort update
      description: ''
      parameters:
      - name: org_tag
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: physical_port_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PhysicalPort'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PhysicalPort'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PhysicalPort'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PhysicalPort'
          description: ''
      tags:
      - api
    delete:
      operationId: PhysicalPort destroy
      description: ''
      parameters:
      - name: org_tag
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: physical_port_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/logical_port/{org_tag}/:
    get:
      operationId: LogicalPort list
      description: ''
      parameters:
      - name: org_tag
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LogicalPort'
          description: ''
      tags:
      - api
    post:
      operationId: LogicalPort create
      description: ''
      parameters:
      - name: org_tag
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogicalPort'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LogicalPort'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LogicalPort'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogicalPort'
          description: ''
      tags:
      - api
  /api/logical_port/{org_tag}/{logical_port_id}/:
    get:
      operationId: LogicalPort retrieve
      description: ''
      parameters:
      - name: org_tag
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: logical_port_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogicalPort'
          description: ''
      tags:
      - api
    put:
      operationId: LogicalPort update
      description: ''
      parameters:
      - name: org_tag
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: logical_port_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogicalPort'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LogicalPort'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LogicalPort'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogicalPort'
          description: ''
      tags:
      - api
    delete:
      operationId: LogicalPort destroy
      description: ''
      parameters:
      - name: org_tag
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: logical_port_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/virtual_port/{org_tag}/:
    get:
      operationId: VirtualPort list
      description: ''
      parameters:
      - name: org_tag
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VirtualPort'
          description: ''
      tags:
      - api
    post:
      operationId: VirtualPort create
      description: ''
      parameters:
      - name: org_tag
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualPort'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VirtualPort'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VirtualPort'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualPort'
          description: ''
      tags:
      - api
  /api/virtual_port/{org_tag}/{virtual_port_id}/:
    get:
      operationId: VirtualPort retrieve
      description: ''
      parameters:
      - name: org_tag
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: virtual_port_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualPort'
          description: ''
      tags:
      - api
    put:
      operationId: VirtualPort update
      description: ''
      parameters:
      - name: org_tag
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: virtual_port_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualPort'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VirtualPort'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VirtualPort'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualPort'
          description: ''
      tags:
      - api
    delete:
      operationId: VirtualPort destroy
      description: ''
      parameters:
      - name: org_tag
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: virtual_port_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/pdbfacility/{org_tag}/:
    get:
      operationId: PeeringDBFacilities list
      description: ''
      parameters:
      - name: org_tag
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PeeringDBFacility'
          description: ''
      tags:
      - api
  /api/service-bridge/aaactl-sync/org/:
    post:
      operationId: 'Service Bridge: Organization create'
      description: 'Sync organization information from aaactl using the service

        brdige


        - name

        - url slug'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Organization'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Organization'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Organization'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
          description: ''
      tags:
      - api
  /api/facility/{org_tag}/{facility_tag}/add_device/:
    post:
      operationId: Facility add_device
      description: ''
      parameters:
      - name: org_tag
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: facility_tag
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FacilityAddDevice'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FacilityAddDevice'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FacilityAddDevice'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacilityAddDevice'
          description: ''
      tags:
      - api
  /api/service-bridge/aaactl-sync/user/{remote_id}/:
    put:
      operationId: 'Service Bridge: User update'
      description: 'Sync user information from aaactl using the service bridge


        - username

        - email

        - first name

        - last name'
      parameters:
      - name: remote_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
  /api/service-bridge/aaactl-sync/org_user/{remote_id}/:
    put:
      operationId: 'Service Bridge: OrganizationUser update'
      description: 'Sync organization<->user relationships from aaactl using the service

        bridge'
      parameters:
      - name: remote_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrganizationUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrganizationUser'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationUser'
          description: ''
      tags:
      - api
  /api/facility/{org_tag}/{facility_tag}/remove_device/{device_id}/:
    delete:
      operationId: Facility remove_device
      description: ''
      parameters:
      - name: org_tag
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: facility_tag
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: device_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
components:
  schemas:
    Organization:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        slug:
          type: string
          maxLength: 64
        personal:
          type: boolean
        backend:
          type: string
          nullable: true
          description: Authentication service that created this org
          maxLength: 255
        remote_id:
          type: integer
          maximum: 2147483647
          nullable: true
          description: If the authentication service is in control of the organizations
            this field will hold a reference to the id at the auth service
          minimum: 0
        grainy:
          type: string
          readOnly: true
        id:
          type: integer
          readOnly: true
        status:
          enum:
          - ok
          - pending
          - deactivated
          - failed
          - expired
          type: string
        created:
          type: string
          format: date-time
          readOnly: true
        updated:
          type: string
          format: date-time
          readOnly: true
      required:
      - name
      - slug
    ASN:
      type: object
      properties:
        asn:
          type: integer
        name:
          type: string
          readOnly: true
      required:
      - asn
    Usage:
      type: object
      properties:
        name:
          type: string
        units:
          type: number
        start:
          type: string
          format: date-time
        end:
          type: string
          format: date-time
      required:
      - name
      - units
      - start
      - end
    Status:
      type: object
      properties: {}
    Heartbeat:
      type: object
      properties:
        status:
          type: string
      required:
      - status
    Device:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        reference:
          type: string
          nullable: true
          description: Remote reference id
          maxLength: 255
        reference_is_sot:
          type: boolean
        description:
          type: string
          nullable: true
          maxLength: 255
        status:
          enum:
          - ok
          - pending
          - deactivated
          - failed
          - expired
          type: string
        type:
          type: string
          description: Type of device (software)
          maxLength: 255
        instance:
          type: integer
          description: deviceCtl environment instance
        org_id:
          type: string
          readOnly: true
        grainy:
          type: string
          readOnly: true
        id:
          type: integer
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        updated:
          type: string
          format: date-time
          readOnly: true
      required:
      - name
      - type
      - instance
    Facility:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          description: Facility name
          maxLength: 255
        slug:
          type: string
          description: Unique url-friendly slug
          maxLength: 64
          pattern: ^[-a-zA-Z0-9_]+$
        address1:
          type: string
          maxLength: 255
        city:
          type: string
          maxLength: 255
        country:
          enum:
          - AF
          - AX
          - AL
          - DZ
          - AS
          - AD
          - AO
          - AI
          - AQ
          - AG
          - AR
          - AM
          - AW
          - AU
          - AT
          - AZ
          - BS
          - BH
          - BD
          - BB
          - BY
          - BE
          - BZ
          - BJ
          - BM
          - BT
          - BO
          - BQ
          - BA
          - BW
          - BV
          - BR
          - IO
          - BN
          - BG
          - BF
          - BI
          - CV
          - KH
          - CM
          - CA
          - KY
          - CF
          - TD
          - CL
          - CN
          - CX
          - CC
          - CO
          - KM
          - CG
          - CD
          - CK
          - CR
          - CI
          - HR
          - CU
          - CW
          - CY
          - CZ
          - DK
          - DJ
          - DM
          - DO
          - EC
          - EG
          - SV
          - GQ
          - ER
          - EE
          - SZ
          - ET
          - FK
          - FO
          - FJ
          - FI
          - FR
          - GF
          - PF
          - TF
          - GA
          - GM
          - GE
          - DE
          - GH
          - GI
          - GR
          - GL
          - GD
          - GP
          - GU
          - GT
          - GG
          - GN
          - GW
          - GY
          - HT
          - HM
          - VA
          - HN
          - HK
          - HU
          - IS
          - IN
          - ID
          - IR
          - IQ
          - IE
          - IM
          - IL
          - IT
          - JM
          - JP
          - JE
          - JO
          - KZ
          - KE
          - KI
          - XK
          - KW
          - KG
          - LA
          - LV
          - LB
          - LS
          - LR
          - LY
          - LI
          - LT
          - LU
          - MO
          - MG
          - MW
          - MY
          - MV
          - ML
          - MT
          - MH
          - MQ
          - MR
          - MU
          - YT
          - MX
          - FM
          - MD
          - MC
          - MN
          - ME
          - MS
          - MA
          - MZ
          - MM
          - NA
          - NR
          - NP
          - NL
          - NC
          - NZ
          - NI
          - NE
          - NG
          - NU
          - NF
          - KP
          - MK
          - MP
          - 'NO'
          - OM
          - PK
          - PW
          - PS
          - PA
          - PG
          - PY
          - PE
          - PH
          - PN
          - PL
          - PT
          - PR
          - QA
          - RE
          - RO
          - RU
          - RW
          - BL
          - SH
          - KN
          - LC
          - MF
          - PM
          - VC
          - WS
          - SM
          - ST
          - SA
          - SN
          - RS
          - SC
          - SL
          - SG
          - SX
          - SK
          - SI
          - SB
          - SO
          - ZA
          - GS
          - KR
          - SS
          - ES
          - LK
          - SD
          - SR
          - SJ
          - SE
          - CH
          - SY
          - TW
          - TJ
          - TZ
          - TH
          - TL
          - TG
          - TK
          - TO
          - TT
          - TN
          - TR
          - TM
          - TC
          - TV
          - UG
          - UA
          - AE
          - GB
          - UM
          - US
          - UY
          - UZ
          - VU
          - VE
          - VN
          - VG
          - VI
          - WF
          - EH
          - YE
          - ZM
          - ZW
          type: string
        floor:
          type: string
          maxLength: 255
        suite:
          type: string
          maxLength: 255
        zipcode:
          type: string
          maxLength: 48
        reference:
          type: string
          nullable: true
          description: Remove reference id
          maxLength: 255
        reference_source:
          type: string
          readOnly: true
        reference_is_sot:
          type: boolean
        reference_ux_url:
          type: string
          readOnly: true
        reference_api_url:
          type: string
          readOnly: true
        instance:
          type: integer
          description: deviceCtl environment instance
        grainy:
          type: string
          readOnly: true
        status:
          enum:
          - ok
          - pending
          - deactivated
          - failed
          - expired
          type: string
        created:
          type: string
          format: date-time
          readOnly: true
        updated:
          type: string
          format: date-time
          readOnly: true
      required:
      - name
      - slug
      - instance
    PhysicalPort:
      type: object
      properties:
        device:
          type: integer
        device_name:
          type: string
          readOnly: true
        name:
          type: string
          maxLength: 255
        display_name:
          type: string
          readOnly: true
        logical_port:
          type: integer
          description: Logical port this physical port is a member of
        logical_port_name:
          type: string
          readOnly: true
        description:
          type: string
          nullable: true
          maxLength: 255
        grainy:
          type: string
          readOnly: true
        id:
          type: integer
          readOnly: true
        status:
          enum:
          - ok
          - pending
          - deactivated
          - failed
          - expired
          type: string
        created:
          type: string
          format: date-time
          readOnly: true
        updated:
          type: string
          format: date-time
          readOnly: true
      required:
      - device
      - name
      - logical_port
    LogicalPort:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        display_name:
          type: string
          readOnly: true
        trunk:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        channel:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        description:
          type: string
          nullable: true
          maxLength: 255
        instance:
          type: integer
        grainy:
          type: string
          readOnly: true
        id:
          type: integer
          readOnly: true
        status:
          enum:
          - ok
          - pending
          - deactivated
          - failed
          - expired
          type: string
        created:
          type: string
          format: date-time
          readOnly: true
        updated:
          type: string
          format: date-time
          readOnly: true
      required:
      - instance
    VirtualPort:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        display_name:
          type: string
          readOnly: true
        logical_port:
          type: integer
          description: logical port
        logical_port_name:
          type: string
          readOnly: true
        vlan_id:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        grainy:
          type: string
          readOnly: true
        id:
          type: integer
          readOnly: true
        status:
          enum:
          - ok
          - pending
          - deactivated
          - failed
          - expired
          type: string
        created:
          type: string
          format: date-time
          readOnly: true
        updated:
          type: string
          format: date-time
          readOnly: true
      required:
      - logical_port
      - vlan_id
    PeeringDBFacility:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
          readOnly: true
        address1:
          type: string
          readOnly: true
        country:
          type: string
          readOnly: true
        zipcode:
          type: string
          readOnly: true
        city:
          type: string
          readOnly: true
        suite:
          type: string
          readOnly: true
        floor:
          type: string
          readOnly: true
        latidude:
          type: string
          format: decimal
          multipleOf: 1.0e-06
          maximum: 1000
          minimum: -1000
          readOnly: true
        longitude:
          type: string
          format: decimal
          multipleOf: 1.0e-06
          maximum: 1000
          minimum: -1000
          readOnly: true
      required:
      - id
    FacilityAddDevice:
      type: object
      properties:
        device:
          type: integer
          description: Device id
      required:
      - device
    User:
      type: object
      properties:
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+\z
          maxLength: 150
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        email:
          type: string
          format: email
          maxLength: 254
        is_superuser:
          type: boolean
          description: Designates that this user has all permissions without explicitly
            assigning them.
        is_staff:
          type: boolean
          description: Designates whether the user can log into this admin site.
      required:
      - username
    OrganizationUser:
      type: object
      properties:
        user:
          type: integer
        default_org:
          type: integer
        orgs:
          type: array
          items:
            type: integer
      required:
      - user
      - default_org
      - orgs
